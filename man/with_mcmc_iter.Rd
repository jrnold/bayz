% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/with_mcmc_iter.R
\name{with_mcmc_iter}
\alias{with_mcmc_iter}
\alias{with_mcmc_iter.stanfit}
\alias{with_mcmc_iter.stanreg}
\title{Evaluate expression within a Stan iteration}
\usage{
with_mcmc_iter(object, ...)

\method{with_mcmc_iter}{stanfit}(object, expr, inc_warmup = FALSE,
  data = list(), env = rlang::base_env(), ...)

\method{with_mcmc_iter}{stanreg}(object, ...)
}
\arguments{
\item{object}{An object.}

\item{...}{Passed to other methods}

\item{expr}{An expression to evaluate.
This uses \code{\link[rlang]{eval_tidy}}
to evaluate the expression with the contents of \code{data} and the
current iteration's parameters as a \link[=as_data_mask]{data mask}.}

\item{inc_warmup}{A logical scalar indicating whether to include
    the warmup draws. This argument is only relevant if \code{permuted} is 
    \code{FALSE}.}

\item{data}{A list or environment with additional data to have in scope
when evaluating \code{expr}.}

\item{env}{The environment in which to evaluate \code{expr}. This
environment is always ignored when evaluating quosures. Quosures
are evaluated in their own environment.}
}
\value{
A list with the output of \code{expr} evaluated with each expression.
}
\description{
Evaluate an expression on each iteration of \link[=stan]{Stan} output.
This makes it easier to post-process Stan output because the expression is
evaluated with the parameters having the same dimensions as they do in the
model.
}
